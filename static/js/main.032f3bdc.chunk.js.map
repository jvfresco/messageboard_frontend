{"version":3,"sources":["components/Layout/Layout.js","components/Backdrop/Backdrop.js","components/Toolbar/Toolbar.js","components/Navigation/MobileToggle/MobileToggle.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/MobileNavigation/MobileNavigation.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorHandler/ErrorHandler.js","components/Feed/Post/Post.js","components/Form/Input/Input.js","util/validators.js","components/Feed/FeedEdit/FeedEdit.js","components/Paginator/Paginator.js","components/Loader/Loader.js","pages/Feed/Feed.js","pages/Feed/SinglePost/SinglePost.js","pages/Auth/Auth.js","pages/Auth/Login.js","pages/Auth/Signup.js","App.js","index.js"],"names":["layout","props","className","header","mobileNav","children","backdrop","ReactDOM","createPortal","open","join","onClick","document","getElementById","toolbar","mobileToggle","onOpen","logo","navItems","id","text","link","auth","navigationItems","filter","item","isAuth","map","mobile","to","exact","onChoose","onLogout","mainNavigation","onOpenMobileNav","mobileNavigation","onChooseItem","button","design","mode","disabled","loading","type","modal","title","onCancelModal","onAcceptModal","acceptEnabled","isLoading","errorHandler","error","onHandle","message","post","author","date","onStartEdit","isOwner","onDelete","input","control","valid","touched","required","value","placeholder","onChange","e","target","files","onBlur","label","htmlFor","rows","trim","length","config","isValid","min","max","email","test","usePrevious","ref","useRef","useEffect","current","reducer","state","action","postForm","formIsValid","updatedForm","formValid","POST_FORM","validators","content","FeedEdit","useReducer","dispatch","prevProps","prevState","editing","selectedPost","postInputChangeHandler","validator","inputName","inputBlurHandler","cancelPostChangeHandler","onCancelEdit","onFinishEdit","paginator","currentPage","onPrevious","lastPage","onNext","loader","updatedPosts","posts","postPage","pop","unshift","totalPosts","updatedPostIndex","findIndex","p","_id","page","postsLoading","resData","totalItems","editReducer","isEditing","loadedPost","find","postId","editPost","editLoading","Feed","editState","editDispatch","useState","status","setStatus","setError","a","fetch","headers","Authorization","token","res","Error","json","catchError","loadPosts","openSocket","on","data","addPost","updatePost","direction","statusUpdateHandler","event","preventDefault","method","body","JSON","stringify","finishEditHandler","postData","url","creator","createdAt","console","log","deletePostHandler","ErrorHandler","onSubmit","style","textAlign","marginTop","Math","ceil","name","Date","toLocaleDateString","userId","startEditPostHandler","SinglePost","setPost","match","params","Login","loginForm","password","setState","inputChangeHandler","onLogin","Signup","signupForm","onSignup","showMobileNav","isOpen","showBackdrop","authLoading","err","withRouter","localStorage","getItem","expiryDate","logoutHandler","remainingMilliseconds","getTime","setAutoLogout","mobileNavHandler","removeItem","loginHandler","authData","setItem","toISOString","signupHandler","history","replace","milliseconds","setTimeout","routes","path","render"],"mappings":"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","file":"static/js/main.032f3bdc.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nimport './Layout.css';\n\nconst layout = props => (\n  <Fragment>\n    <header className=\"main-header\">{props.header}</header>\n    {props.mobileNav}\n    <main className=\"content\">{props.children}</main>\n  </Fragment>\n);\n\nexport default layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>\n  ReactDOM.createPortal(\n    <div\n      className={['backdrop', props.open ? 'open' : ''].join(' ')}\n      onClick={props.onClick}\n    />,\n    document.getElementById('backdrop-root')\n  );\n\nexport default backdrop;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst toolbar = props => (\n    <div className=\"toolbar\">\n       {props.children}\n    </div>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './MobileToggle.css';\n\nconst mobileToggle = props => (\n  <button className=\"mobile-toggle\" onClick={props.onOpen}>\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n  </button>\n);\n\nexport default mobileToggle;\n","import React from 'react';\n\nimport './Logo.css';\n\nconst logo = props => <h1 className=\"logo\">MessageBoard</h1>;\n\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItems.css';\n\nconst navItems = [\n  { id: 'feed', text: 'Feed', link: '/', auth: true },\n  { id: 'login', text: 'Login', link: '/', auth: false },\n  { id: 'signup', text: 'Signup', link: '/signup', auth: false }\n];\n\nconst navigationItems = props => [\n  ...navItems.filter(item => item.auth === props.isAuth).map(item => (\n    <li\n      key={item.id}\n      className={['navigation-item', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavLink to={item.link} exact onClick={props.onChoose}>\n        {item.text}\n      </NavLink>\n    </li>\n  )),\n  props.isAuth && (\n    <li className={['navigation-item', props.mobile ? 'mobile' : ''].join(' ')} key=\"logout\">\n      <button onClick={props.onLogout}>Logout</button>\n    </li>\n  )\n];\n\nexport default navigationItems;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport MobileToggle from '../MobileToggle/MobileToggle';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <nav className=\"main-nav\">\n    <MobileToggle onOpen={props.onOpenMobileNav} />\n    <div className=\"main-nav__logo\">\n      <NavLink to=\"/\">\n        <Logo />\n      </NavLink>\n    </div>\n    <div className=\"spacer\" />\n    <ul className=\"main-nav__items\">\n      <NavigationItems isAuth={props.isAuth} onLogout={props.onLogout} />\n    </ul>\n  </nav>\n);\n\nexport default mainNavigation;\n","import React from 'react';\n\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './MobileNavigation.css';\n\nconst mobileNavigation = props => (\n  <nav className={['mobile-nav', props.open ? 'open' : ''].join(' ')}>\n    <ul\n      className={['mobile-nav__items', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavigationItems\n        mobile\n        onChoose={props.onChooseItem}\n        isAuth={props.isAuth}\n        onLogout={props.onLogout}\n      />\n    </ul>\n  </nav>\n);\n\nexport default mobileNavigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst button = props =>\n  !props.link ? (\n    <button\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      type={props.type}\n    >\n      {props.loading ? 'Loading...' : props.children}\n    </button>\n  ) : (\n    <Link\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      to={props.link}\n    >\n      {props.children}\n    </Link>\n  );\n\nexport default button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '../Button/Button';\nimport './Modal.css';\n\nconst modal = props =>\n  ReactDOM.createPortal(\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"modal__content\">{props.children}</div>\n      <div className=\"modal__actions\">\n        <Button design=\"danger\" mode=\"flat\" onClick={props.onCancelModal}>\n          Cancel\n        </Button>\n        <Button\n          mode=\"raised\"\n          onClick={props.onAcceptModal}\n          disabled={!props.acceptEnabled}\n          loading={props.isLoading}\n        >\n          Accept\n        </Button>\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n\nexport default modal;\n","import React, { Fragment } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Modal from '../Modal/Modal';\n\nconst errorHandler = props => (\n  <Fragment>\n    {props.error && <Backdrop onClick={props.onHandle} />}\n    {props.error && (\n      <Modal\n        title=\"An Error Occurred\"\n        onCancelModal={props.onHandle}\n        onAcceptModal={props.onHandle}\n        acceptEnabled\n      >\n        <p>{props.error.message}</p>\n      </Modal>\n    )}\n  </Fragment>\n);\n\nexport default errorHandler;\n","import React from 'react';\n\nimport Button from '../../Button/Button';\nimport './Post.css';\n\nconst post = props => (\n  <article className=\"post\">\n    <header className=\"post__header\">\n      <h3 className=\"post__meta\">\n        Posted by {props.author} on {props.date}\n      </h3>\n      <h1 className=\"post__title\">{props.title}</h1>\n    </header>\n    <div className=\"post__actions\">\n      <Button mode=\"flat\" link={props.id}>\n        View\n      </Button>\n      <Button mode=\"flat\" onClick={props.onStartEdit} disabled={!props.isOwner}>\n        Edit\n      </Button>\n      <Button mode=\"flat\" design=\"danger\" onClick={props.onDelete} disabled={!props.isOwner}>\n        Delete\n      </Button>\n    </div>\n  </article>\n);\n\nexport default post;\n","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => (\n  <div className=\"input\">\n    \n    {props.control === 'input' && (\n      <input\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        type={props.type}\n        id={props.id}\n        required={props.required}\n        value={props.value}\n        placeholder={props.placeholder}\n        onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n        onBlur={props.onBlur}\n      />\n    )}\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\n    {props.control === 'textarea' && (\n      <textarea\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        id={props.id}\n        rows={props.rows}\n        required={props.required}\n        value={props.value}\n        onChange={e => props.onChange(props.id, e.target.value)}\n        onBlur={props.onBlur}\n        placeholder={props.placeholder}\n      />\n    )}\n  </div>\n);\n\nexport default input;\n","export const required = value => value.trim() !== '';\n\nexport const length = config => value => {\n  let isValid = true;\n  if (config.min) {\n    isValid = isValid && value.trim().length >= config.min;\n  }\n  if (config.max) {\n    isValid = isValid && value.trim().length <= config.max;\n  }\n  return isValid;\n};\n\nexport const email = value =>\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n    value\n  );\n","import React, { Fragment, useEffect, useReducer, useRef } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport { required, length } from '../../../util/validators';\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst reducer = (state, action) => {\n  switch (action.type){\n    case 'POST_SELECTION':\n      return {...state, postForm: action.postForm, formIsValid: true}\n    case 'INPUT_CHANGE': \n      return {...state, postForm: action.updatedForm, formIsValid: action.formValid}\n    case 'INPUT_ONBLUR':\n      return {\n        ...state,\n        postForm: {\n          ...state.postForm,\n          [action.input.target.id]: {\n            ...state.postForm[action.input.target.id],\n            touched: true,\n          },\n        },\n      };\n    case 'EDIT_CANCEL':\n      return {...state, postForm: POST_FORM, formIsValid: false}\n    case 'EDIT_SUBMIT':\n      return {...state, postForm: POST_FORM, formIsValid: false}\n    default:\n      return null\n  }\n}\n\nconst POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  }\n};\n\nconst FeedEdit = props => {\n  const [{postForm, formIsValid}, dispatch] = useReducer(reducer, {\n    postForm: POST_FORM,\n    formIsValid: false,\n  })\n\n  const prevProps = usePrevious(props)\n  const prevState = usePrevious({postForm, formIsValid})\n  useEffect(() => {\n    if (\n      props.editing &&\n      prevProps.editing !== props.editing &&\n      prevProps.selectedPost !== props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: props.selectedPost.title,\n          valid: true\n        },\n        content: {\n          ...prevState.postForm.content,\n          value: props.selectedPost.content,\n          valid: true\n        }\n      };\n      dispatch({type:'POST_SELECTION', postForm})\n    }\n  },[props.editing, props.selectedPost])\n\n  const postInputChangeHandler = (input, value) => {\n    let isValid = true;\n    for (const validator of postForm[input].validators) {\n      isValid = isValid && validator(value);\n    }\n    \n    const updatedForm = {\n      ...postForm,\n      [input]: {\n        ...postForm[input],\n        valid: isValid,\n        value: value\n      }\n    };\n    let formValid = true;\n    \n    for (const inputName in updatedForm) {\n      formValid = formValid && updatedForm[inputName].valid;\n    }\n    \n    dispatch({type: 'INPUT_CHANGE', updatedForm, formValid})\n  };\n\n  const inputBlurHandler = (input) => {\n    \n    dispatch({\n      type: \"INPUT_ONBLUR\",\n      input,\n    });\n  };\n\n  const cancelPostChangeHandler = () => {\n    dispatch({type: 'EDIT_CANCEL'})\n    props.onCancelEdit();\n  };\n\n  const acceptPostChangeHandler = () => {\n    const post = {\n      title: postForm.title.value,\n      content: postForm.content.value\n    };\n    props.onFinishEdit(post);\n    dispatch({type: 'EDIT_SUBMIT'})\n  };\n\n  \n    return props.editing ? (\n      <Fragment>\n        <Backdrop onClick={cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={formIsValid}\n          onCancelModal={cancelPostChangeHandler}\n          onAcceptModal={acceptPostChangeHandler}\n          isLoading={props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={postInputChangeHandler}\n              onBlur={inputBlurHandler}\n              valid={postForm['title'].valid}\n              touched={postForm['title'].touched}\n              value={postForm['title'].value}\n              placeholder={\"TITLE\"}\n              \n            />\n            \n            <Input\n              id=\"content\"\n              label={\"Content\"}\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={postInputChangeHandler}\n              onBlur={inputBlurHandler}\n              valid={postForm['content'].valid}\n              touched={postForm['content'].touched}\n              value={postForm['content'].value}\n              \n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n\n\nexport default FeedEdit;\n","import React from 'react';\n\nimport './Paginator.css';\n\nconst paginator = props => (\n  <div className=\"paginator\">\n    {props.children}\n    <div className=\"paginator__controls\">\n      {props.currentPage > 1 && (\n        <button className=\"paginator__control\" onClick={props.onPrevious}>\n          Previous\n        </button>\n      )}\n      {props.currentPage < props.lastPage && (\n        <button className=\"paginator__control\" onClick={props.onNext}>\n          Next\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport default paginator;\n","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;\n","import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport openSocket from 'socket.io-client'\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'POST_ADD':{\n        const updatedPosts = [...state.posts];\n        if (state.postPage === 1) {\n          if (state.posts.length >= 2) {\n            updatedPosts.pop();\n          }\n          updatedPosts.unshift(action.post);\n        }\n        return {\n          ...state,\n          posts: updatedPosts,\n          totalPosts: state.totalPosts + 1,\n        };\n    }\n    case 'POST_UPDATE': {\n        const updatedPosts = [...state.posts];\n        const updatedPostIndex = updatedPosts.findIndex(\n          (p) => p._id === action.post._id\n        );\n        if (updatedPostIndex > -1) {\n          updatedPosts[updatedPostIndex] = action.post;\n        }\n        return {\n          ...state,\n          posts: updatedPosts,\n        };\n    }\n    case 'POSTS_DIRECTION': {\n      if(action.page){\n        return {...state, postsLoading: true, posts: [], postPage: action.page }\n      } else {\n        return {...state, postsLoading: true, posts: []}\n      }\n    }\n    case 'POSTS_LOAD':{\n      return {\n        ...state,\n        posts: action.resData.posts,\n        totalPosts: action.resData.totalItems,\n        postsLoading: false,\n      }\n    }\n    case 'DELETE_START': \n      return {...state, postsLoading: true }\n    case 'DELETE_ERROR':\n      return {...state, postsLoading: false }\n    default:\n      return null\n  }\n}\n\nconst editReducer = (state, action) => {\n  switch (action.type){\n    case 'EDIT_NEW_POST':\n      return {...state, isEditing: true}\n    case 'EDIT_POST': {\n      const loadedPost = { ...action.posts.find((p) => p._id === action.postId) };\n      return {\n          ...state,\n          isEditing: true,\n          editPost: loadedPost,\n      };\n    }\n    case 'EDIT_CANCEL':\n      return {...state, isEditing: false, editPost: null};\n    case 'EDIT_LOADING':\n      return {...state, editLoading: true};\n    case 'EDIT_FINISH':\n      return {...state, isEditing: false, editPost: null, editLoading: false};\n    default: \n      return null\n  }\n}\n\nconst Feed = props => {\n  const [state, dispatch] = useReducer(reducer, {\n    posts: [],\n    totalPosts: 0,\n    postPage: 1,\n    postsLoading: true,\n  });\n  const [editState, editDispatch] = useReducer(editReducer, {\n    isEditing: false,\n    editPost: null,\n    editLoading: false,\n  })\n  const [status, setStatus] = useState(\"\")\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(\"https://jvfresco-messageboard.herokuapp.com/auth/status\", {\n          headers: {\n            Authorization: \"Bearer \" + props.token,\n          },\n        });\n        if (res.status !== 200) {\n          throw new Error(\"Failed to fetch user status.\");\n        }\n        const resData = await res.json();\n        setStatus(resData.status)\n      } catch (err) {\n        catchError(err);\n      }\n    })()\n    loadPosts();\n    const socket = openSocket(\"https://jvfresco-messageboard.herokuapp.com\");\n    socket.on(\"posts\", (data) => {\n      if (data.action === \"create\") {\n        addPost(data.post);\n      } else if (data.action === \"update\") {\n        updatePost(data.post);\n      } else if (data.action === \"delete\") {\n        loadPosts();\n      }\n    });\n  },[])\n\n  const addPost = (post) => {\n    dispatch({type: 'POST_ADD', post})\n  };\n\n  const updatePost = (post) => {\n    dispatch({type: 'POST_UPDATE', post})\n  };\n\n  const loadPosts = async (direction) => {\n    let page = state.postPage\n    if(!direction){\n      dispatch({type:'POSTS_DIRECTION'})\n    } else {\n      if(direction === \"next\"){\n        page++\n      }\n      if (direction === \"previous\"){\n        page--\n      }\n      dispatch({type:'POSTS_DIRECTION', page})\n    }\n    \n    try {\n      const res = await fetch(\"https://jvfresco-messageboard.herokuapp.com/feed/posts?page=\" + page, {\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n        },\n      });\n      if (res.status !== 200) {\n        throw new Error(\"Failed to fetch posts.\");\n      }\n      const resData = await res.json();\n      dispatch({type: 'POSTS_LOAD', resData})\n    } catch (err) {\n      catchError(err);\n    }\n  };\n\n  const statusUpdateHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const res = await fetch(\"https://jvfresco-messageboard.herokuapp.com/auth/status\", {\n        method: \"PATCH\",\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          status: status,\n        }),\n      });\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Can't update status!\");\n      }\n      const resData = await res.json();\n    } catch (err) {\n      catchError(err);\n    }\n  };\n\n  const newPostHandler = () => {\n    editDispatch({type: 'EDIT_NEW_POST'})\n  };\n\n  const startEditPostHandler = (postId) => {\n    editDispatch({type: 'EDIT_POST', postId, posts: state.posts})\n  };\n\n  const cancelEditHandler = () => {\n    editDispatch({type: 'EDIT_CANCEL'})\n  };\n\n  const finishEditHandler = async (postData) => {\n    editDispatch({type:'EDIT_LOADING'})\n    let url = \"https://jvfresco-messageboard.herokuapp.com/feed/post\";\n    let method = \"POST\";\n    if (editState.editPost) {\n      url = \"https://jvfresco-messageboard.herokuapp.com/feed/post/\" + editState.editPost._id;\n      method = \"PUT\";\n    }\n    try {\n      const res = await fetch(url, {\n        method: method,\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          title: postData.title,\n          content: postData.content\n        }),\n      });\n\n      if(res.status === 403){\n        throw new Error(\"Not authorized\")\n      }else if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Creating or editing a post failed!\");\n      }\n      const resData = await res.json();\n      const post = {\n        _id: resData.post._id,\n        title: resData.post.title,\n        content: resData.post.content,\n        creator: resData.post.creator,\n        createdAt: resData.post.createdAt,\n      };\n      editDispatch({type:'EDIT_FINISH'})\n    } catch (err) {\n      console.log(err);\n      catchError(err)\n      editDispatch({type:'EDIT_FINISH'})\n    }\n  };\n\n  const statusInputChangeHandler = (input, value) => {\n    setStatus(value)\n  };\n\n  const deletePostHandler = async (postId) => {\n    dispatch({type: 'DELETE_START'})\n    try {\n      const res = await fetch(\"https://jvfresco-messageboard.herokuapp.com/feed/post/\" + postId, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n        },\n      });\n      if (res.status === 403){\n        throw new Error('This post is not yours to delete')\n      }else if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Deleting a post failed!\");\n      }\n      const resData = res.json();\n      loadPosts();\n    } catch (err) {\n      catchError(err);\n      console.log(err)\n      dispatch({type: 'DELETE_ERROR'})\n    }\n  };\n\n  const errorHandler = () => {\n    setError(null)\n  };\n\n  const catchError = (error) => {\n    setError(error)\n  };\n\n  \n    return (\n      <Fragment>\n        <ErrorHandler error={error} onHandle={errorHandler} />\n        <FeedEdit\n          editing={editState.isEditing}\n          selectedPost={editState.editPost}\n          loading={editState.editLoading}\n          onCancelEdit={cancelEditHandler}\n          onFinishEdit={finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={statusInputChangeHandler}\n              value={status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {state.postsLoading && (\n            <div style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\n              <Loader />\n            </div>\n          )}\n          {state.posts.length <= 0 && !state.postsLoading ? (\n            <p style={{ textAlign: \"center\" }}>No posts found.</p>\n          ) : null}\n          {!state.postsLoading && (\n            <Paginator\n              onPrevious={() => loadPosts(\"previous\")}\n              onNext={() => loadPosts(\"next\")}\n              lastPage={Math.ceil(state.totalPosts / 2)}\n              currentPage={state.postPage}\n            >\n              {state.posts.map((post) => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString(\"en-US\")}\n                  title={post.title}\n                  content={post.content}\n                  isOwner={post.creator._id === props.userId ? true : false}\n                  onStartEdit={() => startEditPostHandler(post._id)}\n                  onDelete={() => deletePostHandler(post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n}\n\n\nexport default Feed;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport './SinglePost.css';\nimport {NavLink} from 'react-router-dom'\nimport Button from '../../../components/Button/Button'\nconst SinglePost = (props) => {\n  const [post, setPost] = useState({\n    title: '',\n    author: '',\n    date: '',\n    content: ''\n  })\n\n  useEffect(() => {\n    const postId = props.match.params.postId;\n    (async () => {\n      try {\n      const postData = await fetch('https://jvfresco-messageboard.herokuapp.com/feed/post/' + postId, {\n        headers: {\n          Authorization: 'Bearer ' + props.token\n        }\n      })\n      if (postData.status !== 200){\n        throw new Error('Failed to fetch status');\n      }\n      const resData = await postData.json()\n      setPost({\n        title: resData.post.title,\n        author: resData.post.creator.name,\n        date: new Date(resData.post.createdAt).toLocaleDateString('en-US'),\n        content: resData.post.content\n      });\n      }catch(err){\n        console.log(err);\n      };\n    })()\n  },[]) \n\n    return (\n\n        <section className=\"single-post\">\n          <h1>{post.title}</h1>\n          <h2>\n            Created by {post.author} on {post.date}\n          </h2>\n          <p>{post.content}</p>\n          <br />\n          <br />\n          <NavLink to=\"/\">\n           <Button design=\"flat\">Back</Button>\n          </NavLink>\n        </section>\n \n    );\n  \n}\n\nexport default SinglePost;\n","import React from 'react';\n\nimport './Auth.css';\n\nconst auth = props => <section className=\"auth-form\">{props.children}</section>;\n\nexport default auth;\n","import React, { useState } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nconst Login  = props => {\n  const [state, setState] = useState({\n    loginForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      formIsValid: false\n    }\n  });\n\n  const inputChangeHandler = (input, value) => {\n    setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.loginForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.loginForm,\n        [input]: {\n          ...prevState.loginForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        loginForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  const inputBlurHandler = input => {\n    setState(prevState => {\n      return {\n        loginForm: {\n          ...prevState.loginForm,\n          [input]: {\n            ...prevState.loginForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  \n    return (\n      <Auth>\n        <form\n          onSubmit={e =>\n            props.onLogin(e, {\n              email: state.loginForm.email.value,\n              password: state.loginForm.password.value\n            })\n          }\n        >\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={inputChangeHandler}\n            onBlur={inputBlurHandler}\n            value={state.loginForm['email'].value}\n            valid={state.loginForm['email'].valid}\n            touched={state.loginForm['email'].touched}\n            placeholder={\"YOUR EMAIL\"}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={inputChangeHandler}\n            onBlur={inputBlurHandler}\n            value={state.loginForm['password'].value}\n            valid={state.loginForm['password'].valid}\n            touched={state.loginForm['password'].touched}\n            placeholder={\"PASSWORD\"}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={props.loading}>\n            Login\n          </Button>\n        </form>\n      </Auth>\n    );\n  \n}\n\nexport default Login;\n","import React, { useState } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nconst Signup = (props) => {\n  const [state, setState] = useState({\n    signupForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      name: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required]\n      },\n      formIsValid: false\n    }\n  });\n\n  const inputChangeHandler = (input, value) => {\n    setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.signupForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.signupForm,\n        [input]: {\n          ...prevState.signupForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        signupForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  const inputBlurHandler = input => {\n    setState(prevState => {\n      return {\n        signupForm: {\n          ...prevState.signupForm,\n          [input]: {\n            ...prevState.signupForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  \n    return (\n      <Auth>\n        <form onSubmit={e => props.onSignup(e, state)}>\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={inputChangeHandler}\n            onBlur={inputBlurHandler}\n            value={state.signupForm['email'].value}\n            valid={state.signupForm['email'].valid}\n            touched={state.signupForm['email'].touched}\n            placeholder={\"YOUR EMAIL\"}\n          />\n          <Input\n            id=\"name\"\n            label=\"Your Name\"\n            type=\"text\"\n            control=\"input\"\n            onChange={inputChangeHandler}\n            onBlur={inputBlurHandler}\n            value={state.signupForm['name'].value}\n            valid={state.signupForm['name'].valid}\n            touched={state.signupForm['name'].touched}\n            placeholder={\"YOUR NAME\"}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={inputChangeHandler}\n            onBlur={inputBlurHandler}\n            value={state.signupForm['password'].value}\n            valid={state.signupForm['password'].valid}\n            touched={state.signupForm['password'].touched}\n            placeholder={\"PASSWORD\"}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={props.loading}>\n            Signup\n          </Button>\n        </form>\n      </Auth>\n    );\n  \n}\n\nexport default Signup;\n","import React, { Component, Fragment, useReducer, useEffect } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport MainNavigation from './components/Navigation/MainNavigation/MainNavigation';\nimport MobileNavigation from './components/Navigation/MobileNavigation/MobileNavigation';\nimport ErrorHandler from './components/ErrorHandler/ErrorHandler';\nimport FeedPage from './pages/Feed/Feed';\nimport SinglePostPage from './pages/Feed/SinglePost/SinglePost';\nimport LoginPage from './pages/Auth/Login';\nimport SignupPage from './pages/Auth/Signup';\nimport './App.css';\nimport auth from './pages/Auth/Auth';\n\nconst reducer = (state, action) => {\n  switch (action.type){\n    case 'AUTH_USER': \n    return {...state, isAuth: true, token: action.token, userId: action.userId}\n    case 'MOBILE_NAV_HANDLE':\n      return {...state, showMobileNav: action.isOpen, showBackdrop: action.isOpen}\n    case 'BACKDROP_CLOSE':\n      return {...state, showMobileNav: false, showBackdrop: false, error: null}\n    case 'LOGOUT_HANDLER':\n      return {...state, isAuth: false, token: null}\n    case 'AUTH_LOADING':\n      return {...state, authLoading: true}\n    case 'LOGIN_SUCCESS':\n      return {...state, isAuth: true, token: action.token, authLoading: false, userId: action.userId}\n    case 'LOGIN_ERROR':\n      return {...state, isAuth: false, authLoading: false, error: action.err}\n    case 'SIGNUP_SUCCESS':\n      return {...state, isAuth: false, authLoading: false}\n    case 'SIGNUP_ERROR':\n      return {...state, isAuth: false, authLoading: false, error: action.err}\n    case 'ERROR':\n      return {...state, error: null}\n    default:\n      return null\n  }\n}\n\nconst App = (props) => {\n  const [state, dispatch] = useReducer(reducer, {\n    showBackdrop: false,\n    showMobileNav: false,\n    isAuth: false,\n    token: null,\n    userId: null,\n    authLoading: false,\n    error: null,\n  });\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const expiryDate = localStorage.getItem(\"expiryDate\");\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem(\"userId\");\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    dispatch({type: 'AUTH_USER', token, userId})\n    setAutoLogout(remainingMilliseconds);\n  },[])\n\n  const mobileNavHandler = (isOpen) => {\n    dispatch({type: 'MOBILE_NAV_HANDLE', isOpen})\n  };\n\n  const backdropClickHandler = () => {\n    dispatch({type:'BACKDROP_CLOSE'})\n  };\n\n  const logoutHandler = () => {\n    dispatch({type: 'LOGOUT_HANDLER'})\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiryDate\");\n    localStorage.removeItem(\"userId\");\n  };\n\n  const loginHandler = async (event, authData) => {\n    event.preventDefault();\n    dispatch({type:'AUTH_LOADING'})\n    try {\n      const res = await fetch(\"https://jvfresco-messageboard.herokuapp.com/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: authData.email,\n          password: authData.password,\n        }),\n      });\n      if (res.status === 422) {\n        throw new Error(\"Validation failed.\");\n      }\n      if (res.status !== 200 && res.status !== 201) {\n        console.log(\"Error!\");\n        throw new Error(\"Could not authenticate you!\");\n      }\n      const resData = await res.json();\n      dispatch({type:'LOGIN_SUCCESS', token: resData.token,userId: resData.userId,})\n      localStorage.setItem(\"token\", resData.token);\n      localStorage.setItem(\"userId\", resData.userId);\n      const remainingMilliseconds = 60 * 60 * 1000;\n      const expiryDate = new Date(new Date().getTime() + remainingMilliseconds);\n      localStorage.setItem(\"expiryDate\", expiryDate.toISOString());\n      setAutoLogout(remainingMilliseconds);\n    } catch (err) {\n      console.log(err);\n      dispatch({type:'LOGIN_ERROR', err})\n    }\n  };\n\n  const signupHandler = async (event, authData) => {\n    event.preventDefault();\n    dispatch({type:'AUTH_LOADING'})\n    try {\n      const res = await fetch(\"https://jvfresco-messageboard.herokuapp.com/auth/signup\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: authData.signupForm.email.value,\n          password: authData.signupForm.password.value,\n          name: authData.signupForm.name.value,\n        }),\n      });\n      if (res.status === 422) {\n        throw new Error(\n          \"Validation failed. Make sure the email address isn't used yet!\"\n        );\n      }\n      if (res.status !== 200 && res.status !== 201) {\n        console.log(\"Error!\");\n        throw new Error(\"Creating a user failed!\");\n      }\n      const resData = await res.json();\n      dispatch({type:'SIGNUP_SUCCESS'})\n      props.history.replace(\"/\");\n    } catch (err) {\n      console.log(err);\n      dispatch({type:'SIGNUP_ERROR', err})\n    }\n  };\n\n  const setAutoLogout = (milliseconds) => {\n    setTimeout(() => {\n      logoutHandler();\n    }, milliseconds);\n  };\n\n  const errorHandler = () => {\n    dispatch({type:'ERROR'})\n  };\n\n\n    let routes = (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <LoginPage\n              {...props}\n              onLogin={loginHandler}\n              loading={state.authLoading}\n            />\n          )}\n        />\n        <Route\n          path=\"/signup\"\n          exact\n          render={(props) => (\n            <SignupPage\n              {...props}\n              onSignup={signupHandler}\n              loading={state.authLoading}\n            />\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (state.isAuth) {\n      routes = (\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <FeedPage userId={state.userId} token={state.token} />\n            )}\n          />\n          <Route\n            path=\"/:postId\"\n            render={(props) => (\n              <SinglePostPage\n                {...props}\n                userId={state.userId}\n                token={state.token}\n              />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <Fragment>\n        {state.showBackdrop && (\n          <Backdrop onClick={backdropClickHandler} />\n        )}\n        <ErrorHandler error={state.error} onHandle={errorHandler} />\n        <Layout\n          header={\n            <Toolbar>\n              <MainNavigation\n                onOpenMobileNav={mobileNavHandler}\n                onLogout={logoutHandler}\n                isAuth={state.isAuth}\n              />\n            </Toolbar>\n          }\n          mobileNav={\n            <MobileNavigation\n              open={state.showMobileNav}\n              mobile\n              onChooseItem={mobileNavHandler}\n              onLogout={logoutHandler}\n              isAuth={state.isAuth}\n            />\n          }\n        />\n        {routes}\n      </Fragment>\n    );\n  \n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}